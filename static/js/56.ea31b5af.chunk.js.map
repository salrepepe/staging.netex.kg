{"version":3,"sources":["pages/dashboard/sell/index.jsx"],"names":["Sell","t","setVerificationPush","mode","dispatch","useDispatch","useState","filter","setFilter","useSelector","СurrenciesReducer","СurrenciesList","СurrenciesLoading","useEffect","getСurrenciesList","filteredCoin","React","useMemo","item","name","toLocaleLowerCase","startsWith","trim","Сurrencies","profileData","MyProfileReducer","account","data","profile","verification","value","component","title","input","container","spacing","can_sell","map","idx","xs","sm","md","lg","xl","href","currency","Array","from","keys","style","width"],"mappings":"0NAiFeA,UAxEF,SAAH,GAA0C,IAAD,MAAnCC,EAAC,EAADA,EAAGC,EAAmB,EAAnBA,oBAAqBC,EAAI,EAAJA,KAChCC,EAAWC,cACjB,EAA4BC,mBAAS,IAAG,mBAAjCC,EAAM,KAAEC,EAAS,KAExB,EAA8CC,aAC5C,YAAoB,SAAjBC,0BADGC,EAAc,EAAdA,oBAAgBC,EAAiB,EAAjBA,uBAIxBC,qBAAU,WACRT,EAASU,iBAGR,IAEH,IAAMC,EAAeC,IAAMC,SACzB,kBACEN,EAAeJ,QAAO,SAACW,GAAI,OACzBA,EAAKC,KACFC,oBACAC,WAAWd,EAAOa,oBAAoBE,aAG7C,CAACf,IAEGgB,EAAahB,EAASQ,EAAeJ,EAEnCa,EAAgBf,aACtB,YAAmB,SAAhBgB,oBADGD,YAIFE,EAAqB,OAAXF,QAAW,IAAXA,GAAiB,QAAN,EAAXA,EAAaG,YAAI,OAAS,QAAT,EAAjB,EAAmBC,eAAO,OAAc,QAAd,EAA1B,EAA4BC,oBAAY,WAA7B,EAAX,EAA0CC,MAE1D,OACE,cAAC,IAAK,CAACC,UAAU,UAAS,SACxB,eAAC,IAAS,WACR,cAAC,IAAO,IACR,cAAC,IAAU,CAAC9B,EAAGA,EAAG+B,MAAO/B,EAAE,cAAegC,OAAK,EAACzB,UAAWA,IAC3D,cAAC,IAAI,CAAC0B,WAAS,EAACC,QAAS,EAAE,SACvBvB,EAMEW,EACGhB,QAAO,SAACW,GAAI,OAAKA,EAAKkB,YACtBC,KAAI,SAACnB,EAAMoB,GAAG,OACb,cAAC,IAAI,CAACpB,MAAI,EAAWqB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,SAC1C,GAAXjB,EACC,cAAC,IAAW,CACVzB,EAAGA,EACHE,KAAMA,EACND,oBAAqBA,EACrBgB,KAAMA,EACN0B,KAAI,kCAA6B1B,EAAK2B,YAGxC,cAAC,IAAY,CACX1C,KAAMA,EACNF,EAAGA,EACHC,oBAAqBA,EACrBgB,KAAMA,KAdIoB,MARpBQ,MAAMC,KAAKD,MAAM,IAAIE,QAAQX,KAAI,SAACnB,EAAMoB,GAAG,OACzC,cAAC,IAAI,CAACpB,MAAI,EAACqB,GAAI,GAAcC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE,SACtD,cAAC,IAAc,CAACM,MAAO,CAAEC,MAAO,QADVZ","file":"static/js/56.ea31b5af.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Grid, Paper } from \"@mui/material\";\nimport CabinetTop from \"../../../components/cabinetTop\";\nimport CryptoBlock, { DisabledCard } from \"../../../components/CryptoBlock\";\nimport Balance from \"../../../components/Balance\";\nimport CryptoSkeleton from \"../../../components/CryptoSkeleton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getСurrenciesList } from \"../../../redux/reducers/Сurrencies\";\n\nconst Sell = ({ t, setVerificationPush, mode }) => {\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState(\"\");\n\n  const { СurrenciesList, СurrenciesLoading } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n\n  useEffect(() => {\n    dispatch(getСurrenciesList());\n\n    // eslint-disable-next-line\n  }, []);\n\n  const filteredCoin = React.useMemo(\n    () =>\n      СurrenciesList.filter((item) =>\n        item.name\n          .toLocaleLowerCase()\n          .startsWith(filter.toLocaleLowerCase().trim())\n      ),\n    // eslint-disable-next-line\n    [filter]\n  );\n  const Сurrencies = filter ? filteredCoin : СurrenciesList;\n\n  const { profileData } = useSelector(\n    ({ MyProfileReducer }) => MyProfileReducer\n  );\n\n  const account = profileData?.data?.profile?.verification?.value;\n\n  return (\n    <Paper component=\"section\">\n      <Container>\n        <Balance />\n        <CabinetTop t={t} title={t(\"sellEMoney\")} input setFilter={setFilter} />\n        <Grid container spacing={2}>\n          {!СurrenciesLoading\n            ? Array.from(Array(12).keys()).map((item, idx) => (\n                <Grid item xs={12} key={idx} sm={6} md={3} lg={3} xl={3}>\n                  <CryptoSkeleton style={{ width: 389 }} />\n                </Grid>\n              ))\n            : Сurrencies\n                .filter((item) => item.can_sell)\n                .map((item, idx) => (\n                  <Grid item key={idx} xs={12} sm={6} md={3} lg={3} xl={3}>\n                    {account == 2 ? (\n                      <CryptoBlock\n                        t={t}\n                        mode={mode}\n                        setVerificationPush={setVerificationPush}\n                        item={item}\n                        href={`/dashboard/sell/details/${item.currency}`}\n                      />\n                    ) : (\n                      <DisabledCard\n                        mode={mode}\n                        t={t}\n                        setVerificationPush={setVerificationPush}\n                        item={item}\n                      />\n                    )}\n                  </Grid>\n                ))}\n        </Grid>\n      </Container>\n    </Paper>\n  );\n};\n\nexport default Sell;\n"],"sourceRoot":""}