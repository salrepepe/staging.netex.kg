{"version":3,"sources":["pages/dashboard/MoneyTransaction/AllTransactions.jsx"],"names":["AllTransactions","t","classes","useStyles","dispatch","useDispatch","history","useHistory","useSelector","internalReducer","internalList","isLoading","useState","oldTransfers","setOldTransfers","newTransfers","setNewTransfers","useEffect","getInternalList","setAcceptedTransferData","Array","isArray","data","filter","item","status","component","sx","minHeight","maxWidth","style","marginBottom","variant","className","mt","container","grid","xs","justifyContent","alignItems","title","map","idx","boxItem","box","text","owner","create_at","sum_with_commission","currency","onClick","push","id","color","boxWithBd","disabled","makeStyles","theme","paddingTop","marginTop","borderTop","display","width","height","marginLeft","breakpoints","down","flexDirection","margin","whiteSpace","textOverflow","overflow","background","boxShadow","borderRadius","padding"],"mappings":"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","file":"static/js/54.7041b719.chunk.js","sourcesContent":["import { Box, Button, Container, Grid, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { MediumTitle } from \"../../../shared/Typography\";\nimport {\n  getInternalList,\n  setAcceptedTransferData,\n} from \"../../../redux/reducers/internal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport Reload from \"../../../components/Reload\";\n\nconst AllTransactions = ({ t }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { internalList, isLoading } = useSelector(\n    ({ internalReducer }) => internalReducer\n  );\n\n  const [oldTransfers, setOldTransfers] = useState([]);\n  const [newTransfers, setNewTransfers] = useState([]);\n\n  useEffect(() => {\n    dispatch(getInternalList());\n\n    dispatch(setAcceptedTransferData(null));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (Array.isArray(internalList?.data)) {\n      const oldTransfers = internalList?.data?.filter((item) => item.status);\n      const newTransfers = internalList?.data?.filter((item) => !item.status);\n\n      setOldTransfers(oldTransfers);\n      setNewTransfers(newTransfers);\n    }\n  }, [internalList]);\n\n  return (\n    <Box\n      component=\"section\"\n      sx={{\n        minHeight: \"82vh\",\n      }}\n    >\n      {isLoading && <Reload />}\n      <Container maxWidth=\"lg\">\n        <MediumTitle style={{ marginBottom: 16 }}>\n          {t(\"allFundsReceived\")}\n        </MediumTitle>\n        <Typography variant=\"h5\" className=\"red\">\n          {t(\"newFunds\")}\n        </Typography>\n        <Box mt={\"16px\"}>\n          <Grid container className={classes.grid}>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"fromWhom\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"date\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"amount\")}\n              </Typography>\n            </Grid>\n          </Grid>\n          {newTransfers?.map((item, idx) => (\n            <Box className={classes.boxItem} key={idx}>\n              <Grid container className={classes.box}>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle className={classes.text}>\n                    {item.owner}\n                  </MediumTitle>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle className={classes.text}>\n                    {item.create_at}\n                  </MediumTitle>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle className={classes.text}>\n                    {item.sum_with_commission} {item.currency}\n                  </MediumTitle>\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  history.push(`/dashboard/transaction/get/${item.id}`);\n                }}\n                color=\"primary\"\n              >\n                {t(\"acceptFunds\")}\n              </Button>\n            </Box>\n          ))}\n        </Box>\n        <Box mt={\"16px\"} className={classes.boxWithBd}>\n          <Typography variant=\"h5\" style={{ color: \"#000\" }}>\n            {t(\"oldFunds\")}\n          </Typography>\n          <Grid container className={classes.grid}>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"fromWhom\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"date\")}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={4}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"h5\" className={classes.title}>\n                {t(\"amount\")}\n              </Typography>\n            </Grid>\n          </Grid>\n          {oldTransfers?.map((item, idx) => (\n            <Box className={classes.boxItem} key={idx}>\n              <Grid container className={classes.box}>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle\n                    className={classes.text}\n                    style={{ color: \"#64748B\" }}\n                  >\n                    {item.owner}\n                  </MediumTitle>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle\n                    className={classes.text}\n                    style={{ color: \"#64748B\" }}\n                  >\n                    {item.create_at}\n                  </MediumTitle>\n                </Grid>\n                <Grid\n                  item\n                  xs={4}\n                  container\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <MediumTitle\n                    className={classes.text}\n                    style={{ color: \"#64748B\" }}\n                  >\n                    {item.sum_with_commission}\n                  </MediumTitle>\n                </Grid>\n              </Grid>\n              <Button variant=\"contained\" color=\"primary\" disabled>\n                {t(\"acceptedFunds\")}\n              </Button>\n            </Box>\n          ))}\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default AllTransactions;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    color: \"#64748B\",\n  },\n\n  boxWithBd: {\n    paddingTop: 24,\n    marginTop: 24,\n    borderTop: \"1px solid #E7EAEE\",\n  },\n\n  boxItem: {\n    marginBottom: 8,\n    display: \"flex\",\n\n    \"& button\": {\n      width: 187,\n      height: 60,\n      marginLeft: 16,\n    },\n\n    [theme.breakpoints.down(992)]: {\n      flexDirection: \"column\",\n\n      \"& button\": {\n        width: \"100%\",\n        margin: \"16px 0 0 0\",\n      },\n    },\n  },\n\n  text: {\n    whiteSpace: \"nowrap\",\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n  },\n  grid: {\n    marginBottom: 16,\n    width: \"84%\",\n\n    [theme.breakpoints.down(992)]: {\n      width: \"100%\",\n    },\n  },\n  box: {\n    background: \"#FFF\",\n    boxShadow: \" 0px 1px 0px #E2E8F0\",\n    borderRadius: 8,\n    padding: \"16px \",\n    height: \"60px\",\n\n    \"&:last-child\": {\n      marginBottom: 0,\n    },\n  },\n}));\n"],"sourceRoot":""}