{"version":3,"sources":["assets/images/state/commissionDark.svg","assets/images/state/coin.svg","assets/images/state/timer.svg","pages/dashboard/sell/sellDetail/index.jsx"],"names":["useStyles","makeStyles","theme","whiteBox","boxShadow","borderRadius","background","height","display","justifyContent","alignItems","padding","transition","breakpoints","down","flexDirection","SupTitle","color","fontWeight","margin","fontSize","DetailsTitle","marginBottom","balanceAmount","cursor","borderBottom","DetailsLabel","backgroundColor","minWidth","button","width","DetailsInput","img","SellDetails","t","classes","dispatch","useDispatch","parameter","useParams","useTheme","md","useMediaQuery","up","history","useHistory","useState","order","useSelector","sell","setSellByParameterCoin","СurrenciesList","СurrenciesReducer","order_data","orders","useEffect","getSellByParametersCoin","SellDetailCoin","filter","item","currency","SellDetailUsdtCoin","AmountToCredited","WriteOffAmount","price","rate","form","setForm","handleValueChange","target","value","name","WriteOffAmountTotal","WriteOffAmountCalc","parameters","commission","severity","setTimeout","push","limit","status","exact","from","to","sx","pt","pb","autoHideDuration","open","anchorOrigin","vertical","horizontal","onClose","setSellData","message","alert","variant","messages","style","textAlign","container","spacing","marginTop","xs","sm","className","src","timeIcon","alt","CoinIcon","min_qty","CommissionIcon","onClick","balance","fullWidth","type","InputProps","inputProps","pattern","onKeyPress","event","test","key","preventDefault","label","onChange","toFixed","decimal","disabled","size","data","order_type","order_side","quantity","amount","stop_price","stop","createOrder","sum","makeSell","Create"],"mappings":"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","file":"static/js/31.91c23b39.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/commissionDark.c1451589.svg\";","export default __webpack_public_path__ + \"static/media/coin.f1bea9ad.svg\";","export default __webpack_public_path__ + \"static/media/timer.bd2a34ce.svg\";","import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Snackbar,\n  TextField,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@mui/material\";\nimport CommissionIcon from \"../../../../assets/images/state/commissionDark.svg\";\nimport CoinIcon from \"../../../../assets/images/state/coin.svg\";\nimport timeIcon from \"./../../../../assets/images/state/timer.svg\";\nimport { Redirect, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  makeSell,\n  getSellByParametersCoin,\n  setSellData,\n} from \"../../../../redux/reducers/sell1\";\nimport SellConfirm from \"../SellConfirm\";\nimport { Alert } from \"@material-ui/lab\";\nimport NotFound from \"../../../NotFound\";\nimport { OrderAlert } from \"../../../../components/Orders\";\nimport Inputs from \"../../../../components/Orders/Inputs\";\nimport { createOrder } from \"../../../../redux/reducers/orders\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst SellDetails = ({ t }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { parameter } = useParams();\n  const theme = useTheme();\n  const md = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const history = useHistory();\n\n  // eslint-disable-next-line no-unused-vars\n  const [order, setOrder] = useState(\"market\");\n\n  const { setSellByParameterCoin, sell } = useSelector(({ sell }) => sell);\n  const { СurrenciesList } = useSelector(\n    ({ СurrenciesReducer }) => СurrenciesReducer\n  );\n\n  const { order_data } = useSelector(({ orders }) => orders);\n\n  useEffect(() => {\n    dispatch(getSellByParametersCoin(parameter));\n    //eslint-disable-next-line\n  }, []);\n\n  const SellDetailCoin = СurrenciesList.filter(\n    (item) => item.currency === parameter\n  )[0];\n  const SellDetailUsdtCoin = СurrenciesList.filter(\n    (item) => item.currency === \"USDT\"\n  )[0];\n  const [form, setForm] = useState({\n    AmountToCredited: \"\",\n    WriteOffAmount: \"\",\n    price: SellDetailCoin?.rate,\n  });\n  const handleValueChange = ({ target: { value, name } }) => {\n    setForm((form) => ({ ...form, [name]: value }));\n  };\n  const WriteOffAmountTotal = form.AmountToCredited * form?.price;\n  const WriteOffAmountComm =\n    (WriteOffAmountTotal * setSellByParameterCoin.parameters?.commission) / 100;\n  const WriteOffAmountCalc = WriteOffAmountTotal - WriteOffAmountComm;\n\n  const Create = () => {\n    if (order !== \"market\") {\n      const data = {\n        order_type: order,\n        order_side: \"sell\",\n        currency: parameter,\n        quantity: form.WriteOffAmountCalc,\n        amount: form.AmountToCredited,\n        price: form.price,\n        stop_price: form.stop,\n      };\n      dispatch(createOrder(data));\n    } else {\n      const data = { sum: form.AmountToCredited, currency: parameter };\n      dispatch(makeSell(data));\n    }\n  };\n\n  useEffect(() => {\n    if (order_data.severity === 200)\n      setTimeout(() => {\n        history.push(\"/dashboard/orders\");\n      }, 1000);\n    // eslint-disable-next-line\n  }, [order_data]);\n\n  useEffect(() => {\n    if (order === \"limit\") {\n      setForm({\n        ...form,\n        price: SellDetailCoin?.rate,\n      });\n    } else {\n      setForm({\n        ...form,\n        price: SellDetailCoin?.rate,\n        limit: SellDetailCoin?.rate,\n      });\n    }\n    // eslint-disable-next-line\n  }, [SellDetailCoin, order]);\n\n  return (\n    <>\n      {setSellByParameterCoin.status === 400 ? (\n        <NotFound />\n      ) : setSellByParameterCoin.status === 403 ? (\n        <Redirect exact from=\"/\" to=\"/dashboard/settings/verification\" />\n      ) : (\n        <Paper sx={{ pt: 4, pb: 4 }}>\n          <Snackbar\n            autoHideDuration={1000}\n            open={sell.severity && sell.severity !== 200}\n            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n            onClose={() =>\n              dispatch(\n                setSellData({\n                  ...sell,\n                  open: false,\n                  severity: sell.severity,\n                  message: sell.message,\n                })\n              )\n            }\n          >\n            <Alert\n              onClose={() => dispatch(setSellData({ ...alert, open: false }))}\n              severity={sell.severity === 200 ? \"success\" : \"error\"}\n              variant=\"filled\"\n            >\n              {sell.severity === 200\n                ? \"\"\n                : sell.message && sell.message.messages}\n            </Alert>\n          </Snackbar>\n          <OrderAlert />\n          <SellConfirm t={t} />\n          {/* <Chart coin={SellDetailCoin} /> */}\n          <Typography\n            variant=\"h2\"\n            style={{ color: \"#000\", textAlign: \"center\" }}\n          >\n            {t(\"sell\")} {SellDetailCoin?.name} {t(\"atRate\")}\n          </Typography>\n          <Typography\n            variant=\"h3\"\n            style={{\n              color: \"#64748B\",\n              textAlign: \"center\",\n              fontWeight: 300,\n              margin: \"24px 0 56px\",\n            }}\n          >\n            1.00 {SellDetailCoin?.currency} = {SellDetailCoin?.rate} USDT\n          </Typography>\n\n          <Container>\n            <Grid\n              container\n              spacing={2}\n              justifyContent=\"center\"\n              style={{ marginTop: 40 }}\n            >\n              <Grid xs={12} sm={6} md={3} item>\n                <Box\n                  style={{ height: 210, flexDirection: \"column\" }}\n                  className={classes.whiteBox}\n                >\n                  <img className={classes.img} src={timeIcon} alt=\"time-icon\" />\n                  <Typography variant=\"h5\" className={classes.SupTitle}>\n                    {t(\"DueDate\")}\n                  </Typography>\n                  <Typography variant=\"h4\" className={classes.DetailsTitle}>\n                    {t(\"Instantly\")}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid xs={12} sm={6} md={3} item>\n                <Box\n                  style={{ height: 210, flexDirection: \"column\" }}\n                  className={classes.whiteBox}\n                >\n                  <img className={classes.img} src={CoinIcon} alt=\"Coin-icon\" />\n                  <Typography variant=\"h5\" className={classes.SupTitle}>\n                    {t(\"MinAmount\")}\n                  </Typography>\n                  <Typography variant=\"h4\" className={classes.DetailsTitle}>\n                    {setSellByParameterCoin.parameters?.min_qty}{\" \"}\n                    {SellDetailCoin?.currency}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid xs={12} sm={6} md={3} item>\n                <Box\n                  style={{ height: 210, flexDirection: \"column\" }}\n                  className={classes.whiteBox}\n                >\n                  <img\n                    className={classes.img}\n                    src={CommissionIcon}\n                    alt=\"Commission-icon\"\n                  />\n                  <Typography variant=\"h5\" className={classes.SupTitle}>\n                    {t(\"OurCommission\")}\n                  </Typography>\n                  <Typography variant=\"h4\" className={classes.DetailsTitle}>\n                    {setSellByParameterCoin.parameters?.commission} %\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n\n            {/* <Orders t={t} setOrder={setOrder} order={order} /> */}\n\n            <Grid style={{ marginTop: 40 }} container spacing={2}>\n              <Grid item md={6} xs={12}>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"space-between\"\n                  style={{ flexDirection: !md && \"column\" }}\n                >\n                  {/* {md && (\n                    <Typography\n                      className={classes.DetailsTitle}\n                      style={{ fontWeight: !md && 600 }}\n                    >\n                      {t(\"WriteOffAmount\")}\n                    </Typography>\n                  )} */}\n                  <Typography className={classes.DetailsTitle}>\n                    <span style={{ fontWeight: 400 }}>{t(\"balance\")}</span>:{\" \"}\n                    <span\n                      className={classes.balanceAmount}\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        setForm((form) => ({\n                          ...form,\n                          AmountToCredited: SellDetailCoin?.balance,\n                        }))\n                      }\n                    >\n                      {SellDetailCoin?.balance}\n                    </span>{\" \"}\n                    {SellDetailCoin?.currency}\n                  </Typography>\n                </Box>\n\n                <Inputs\n                  order={order}\n                  classes={classes}\n                  parameter={parameter}\n                  t={t}\n                  form={form}\n                  handleValueChange={handleValueChange}\n                />\n\n                <Box display=\"flex\">\n                  <Box className={classes.DetailsLabel}>\n                    {SellDetailCoin?.currency}\n                  </Box>\n                  <TextField\n                    fullWidth\n                    type=\"text\"\n                    InputProps={{\n                      inputProps: {\n                        pattern: \"\\\\d*.\\\\d*\",\n                      },\n                    }}\n                    onKeyPress={(event) => {\n                      if (!/[0-9.]/.test(event.key)) {\n                        event.preventDefault();\n                      }\n                    }}\n                    label={md ? \"0.000000\" : t(\"WriteOffAmount\")}\n                    variant=\"outlined\"\n                    name=\"AmountToCredited\"\n                    value={form.AmountToCredited}\n                    className={classes.DetailsInput}\n                    onChange={handleValueChange}\n                  />\n                </Box>\n              </Grid>\n              <Grid item md={6} xs={12}>\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"space-between\"\n                  style={{ flexDirection: !md && \"column\" }}\n                >\n                  {/* {md && (\n                    <Typography\n                      className={classes.DetailsTitle}\n                      style={{ fontWeight: !md && 600 }}\n                    >\n                      {t(\"AmountToCredited\")}\n                    </Typography>\n                  )} */}\n                  <Typography className={classes.DetailsTitle}>\n                    <span style={{ fontWeight: 400 }}>{t(\"balance\")}</span>:{\" \"}\n                    {SellDetailUsdtCoin?.balance} USDT\n                  </Typography>\n                </Box>\n                <Box display=\"flex\">\n                  <Box className={classes.DetailsLabel}>USDT</Box>\n                  <TextField\n                    fullWidth\n                    label={md ? \"0.000000\" : t(\"AmountToCredited\")}\n                    name=\"WriteOffAmount\"\n                    variant=\"outlined\"\n                    className={classes.DetailsInput}\n                    onChange={handleValueChange}\n                    value={WriteOffAmountCalc.toFixed(\n                      SellDetailUsdtCoin?.decimal\n                    )}\n                    disabled\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => Create()}\n            >\n              {t(\"Continue\")}\n            </Button>\n          </Container>\n        </Paper>\n      )}\n    </>\n  );\n};\nconst useStyles = makeStyles((theme) => ({\n  whiteBox: {\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    borderRadius: 8,\n    background: \"#FFF\",\n    height: 167,\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: \"30px\",\n    transition: \"all 0.2s linear\",\n    \"&:hover\": {\n      boxShadow: \"0px 0px 6px 2px #E2E8F0\",\n    },\n    [theme.breakpoints.down(576)]: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  },\n  SupTitle: {\n    color: \"#323A46\",\n    fontWeight: 300,\n    margin: \"22px 0 8px\",\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 20,\n    },\n  },\n  DetailsTitle: {\n    fontWeight: 600,\n    color: \"#323A46\",\n    marginBottom: 16,\n    fontSize: 23,\n    [theme.breakpoints.down(\"md\")]: {\n      fontSize: 23,\n    },\n  },\n  balanceAmount: {\n    transition: \"all .3s\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      borderBottom: \"2px solid #000\",\n    },\n  },\n  DetailsLabel: {\n    color: \"#000000\",\n    fontWeight: 600,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center !important\",\n    justifyContent: \"center\",\n    padding: \"0 18px\",\n    backgroundColor: \"#E7EAEE\",\n    borderRadius: \"8px 0 0 8px\",\n    boxShadow: \"0px 1px 0px #E2E8F0\",\n    minWidth: \"70px\",\n  },\n\n  button: {\n    margin: \"30px auto 0\",\n    display: \"block\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  DetailsInput: {\n    \"& .MuiOutlinedInput-input\": {\n      backgroundColor: \"#fff\",\n      transition: \"all 0.2s linear\",\n      borderRadius: \"0 8px 8px 0!important\",\n    },\n\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      borderRadius: \"0 8px 8px 0!important\",\n    },\n  },\n\n  img: {\n    width: 66,\n    height: 66,\n  },\n}));\nexport default SellDetails;\n"],"sourceRoot":""}