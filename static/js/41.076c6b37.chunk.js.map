{"version":3,"sources":["../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","pages/dashboard/MoneyTransaction/Dialog.jsx","pages/dashboard/MoneyTransaction/GetMoney.jsx"],"names":["getDialogContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentRoot","styled","name","overridesResolver","props","styles","ownerState","root","dividers","theme","_extends","flex","WebkitOverflowScrolling","overflowY","padding","borderTop","palette","divider","borderBottom","paddingTop","DialogContent","React","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","DialogSuccess","success","setSuccess","t","useStyles","history","useHistory","Dialog","open","onClose","push","scroll","paper","dialogContent","IconButton","onClick","close","src","alt","successIcon","style","marginBottom","Typography","variant","maxWidth","textAlign","Button","height","width","marginTop","color","makeStyles","borderRadius","display","justifyContent","alignItems","flexDirection","position","top","right","withRouter","match","dispatch","useDispatch","useState","loading","setLoading","firstUpdate","useRef","acceptedInternal","useSelector","internalReducer","useLayoutEffect","current","status","Box","component","sx","minHeight","Snackbar","data","detail","autoHideDuration","setAcceptedTransferData","anchorOrigin","vertical","horizontal","Alert","severity","Container","initialValues","security_code","onSubmit","values","acceptInternal","params","id","handleChange","fontWeight","TextField","fullWidth","error","message","helperText","type","label","value","onChange","input","size","disabled","button","CircularProgress","backgroundColor","margin","breakpoints","down"],"mappings":"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","file":"static/js/41.076c6b37.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  '.MuiDialogTitle-root + &': {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogContent;","import {\n  Button,\n  Dialog,\n  DialogContent,\n  IconButton,\n  \n  Typography,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport close from \"../../../assets/images/state/close.svg\";\nimport successIcon from \"../../../assets/images/state/success.svg\";\nimport { makeStyles } from \"@mui/styles\";\n\n\nconst DialogSuccess = ({ success, setSuccess, t }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Dialog\n      open={success}\n      onClose={() => {\n        setSuccess(false);\n        history.push(\"/dashboard/reviews/leave\");\n      }}\n      scroll=\"body\"\n      classes={{ paper: classes.paper }}\n    >\n      <DialogContent className={classes.dialogContent}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={() => {\n            setSuccess(false);\n          }}\n          className={classes.close}\n        >\n          <img src={close} alt=\"\" />\n        </IconButton>\n        <img src={successIcon} style={{ marginBottom: 30 }} alt=\"\" />\n        <Typography variant=\"h2\" style={{ maxWidth: 439, textAlign: \"center\" }}>\n          {t(\"fundsReceivedSuccessMessage\")}\n        </Typography>\n        <Button\n          onClick={() => {\n            setSuccess(false);\n            history.push(\"/dashboard/history\");\n          }}\n          variant=\"contained\"\n          style={{ height: 56, width: \"100%\", marginTop: 24 }}\n          color=\"secondary\"\n        >\n          {t(\"ok\")}\n        </Button>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default DialogSuccess;\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    borderRadius: 16,\n    width: \"100%\",\n  },\n\n  dialogContent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    padding: \"40px!important\",\n  },\n\n  close: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n  },\n}));\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  Snackbar,\n  CircularProgress,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Form, Formik } from \"formik\";\nimport { MediumTitle } from \"../../../shared/Typography\";\nimport Dialog from \"./Dialog\";\nimport { withRouter } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  acceptInternal,\n  setAcceptedTransferData,\n} from \"../../../redux/reducers/internal\";\nimport { Alert } from \"@mui/material\";\n\nconst GetMoney = ({ t, match }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const firstUpdate = useRef(true);\n  const [success, setSuccess] = useState(false);\n\n  const { acceptedInternal } = useSelector(\n    ({ internalReducer }) => internalReducer\n  );\n\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n\n    if (acceptedInternal?.status === 202) {\n      setSuccess(true);\n    }\n\n    // eslint-disable-next-line\n  }, [acceptedInternal]);\n\n  return (\n    <Box\n      component=\"section\"\n      style={{ color: \"#191D23\" }}\n      sx={{\n        minHeight: \"82vh\",\n      }}\n    >\n      <Snackbar\n        open={\n          acceptedInternal?.data?.detail !== \"SUCCESS\"\n            ? acceptedInternal?.data?.detail\n            : \"\"\n        }\n        autoHideDuration={3000}\n        onClose={() => {\n          dispatch(setAcceptedTransferData(null));\n        }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <Alert severity=\"error\" color=\"error\" variant=\"filled\">\n          {acceptedInternal?.data?.detail}\n        </Alert>\n      </Snackbar>\n      <Container maxWidth=\"lg\">\n        <Formik\n          initialValues={{ security_code: \"\" }}\n          onSubmit={(values) => {\n            setLoading(true);\n            dispatch(acceptInternal(match.params.id, values));\n          }}\n        >\n          {({ values, handleChange }) => (\n            <Form>\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                flexDirection=\"column\"\n              >\n                <Typography variant=\"h3\" style={{ marginBottom: 16 }}>\n                  {t(\"getFunds\")}\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  style={{ marginBottom: 24, fontWeight: \"300\" }}\n                >\n                  {t(\"getFundsSubtitle\")}\n                </Typography>\n              </Box>\n              <Box>\n                <MediumTitle>{t(\"protectionCode\")}</MediumTitle>\n                <TextField\n                  fullWidth\n                  error={acceptedInternal?.data?.message && true}\n                  helperText={\n                    acceptedInternal?.data?.message &&\n                    `${t(\"invalidProtectionCode\")}`\n                  }\n                  type=\"number\"\n                  label={t(\"enterProtectionCode\")}\n                  variant=\"outlined\"\n                  name=\"security_code\"\n                  value={values.security_code}\n                  onChange={handleChange}\n                  className={classes.input}\n                />\n              </Box>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                disabled={loading}\n                type=\"submit\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                {loading ? (\n                  <CircularProgress color=\"secondary\" />\n                ) : (\n                  t(\"continue\")\n                )}\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n      <Dialog success={success} setSuccess={setSuccess} t={t} />\n    </Box>\n  );\n};\n\nexport default withRouter(GetMoney);\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    marginTop: 16,\n\n    \"& .MuiOutlinedInput-input\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n\n  button: {\n    margin: \"30px auto\",\n    display: \"block\",\n    [theme.breakpoints.down(992)]: {\n      width: \"100%\",\n    },\n  },\n}));\n"],"sourceRoot":""}