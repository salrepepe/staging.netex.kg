{"version":3,"sources":["assets/images/auth/authUserBg.webp","assets/images/auth/authClockBg.webp","assets/images/auth/authClockBgfuzzy.webp","assets/images/auth/authUserBgfuzzy.webp","containers/authContainer.jsx","pages/authentication/activation/index.jsx"],"names":["AuthContainer","children","user","classes","makeStyles","theme","authWrapper","maxWidth","color","margin","paddingTop","paddingBottom","textAlign","position","minHeight","breakpoints","down","content","width","height","backgroundImage","authBg","clockBg","top","left","backgroundSize","display","authBgFuzzy","clockBgFuzzy","right","bottom","backgroundRepeat","backgroundPosition","useStyles","className","Activation","t","dispatch","useDispatch","history","useHistory","useSelector","ActivationAccountReducer","answerActivationAccountAlert","resended_code_data","useState","reload","setReload","emailData","cookie","get","formik","useFormik","initialValues","email","code","onSubmit","values","postActivationAccountData","firstUpdate","React","useRef","useLayoutEffect","current","severity","setTimeout","set","message","token","path","expires","Date","toUTCString","istance","defaults","headers","Authorization","push","getProfileData","active","background","formControl","boxShadow","fontWeight","whiteSpace","textOverflow","overflow","fontSize","borderColor","useEffect","document","title","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","setAnswerActivationAccount","alert","variant","messages","setResendedCodeData","gutterBottom","component","style","lineHeight","handleSubmit","autoComplete","fullWidth","label","type","name","value","onChange","handleChange","required","marginTop","size","disableShrink","onClick","resendActivationAccountCode"],"mappings":"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","file":"static/js/38.dc7838e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/authUserBg.f100b4c7.webp\";","export default __webpack_public_path__ + \"static/media/authClockBg.a5c1bb9f.webp\";","export default __webpack_public_path__ + \"static/media/authClockBgfuzzy.cf644ebd.webp\";","export default __webpack_public_path__ + \"static/media/authUserBgfuzzy.982ea686.webp\";","import React from \"react\";\nimport authBg from \"./../assets/images/auth/authUserBg.webp\";\nimport clockBg from \"./../assets/images/auth/authClockBg.webp\";\nimport clockBgFuzzy from \"./../assets/images/auth/authClockBgfuzzy.webp\";\nimport authBgFuzzy from \"./../assets/images/auth/authUserBgfuzzy.webp\";\nimport { makeStyles } from \"@mui/styles\";\nconst AuthContainer = ({ children, user }) => {\n  const useStyles = makeStyles((theme) => ({\n    authWrapper: {\n      maxWidth: \"450px\",\n      color: \"#FFF\",\n      margin: \"0 auto\",\n      paddingTop: 180,\n      paddingBottom: 80,\n      textAlign: \"center\",\n      position: \"relative\",\n      minHeight: \"873px\",\n      [theme.breakpoints.down(992)]: {\n        paddingTop: 140,\n        maxWidth: \"450px\",\n        minHeight: \"auto\",\n      },\n      \"&::before\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: 450,\n        height: 450,\n        backgroundImage: `url(${user ? authBg : clockBg})`,\n        top: \"30%\",\n        left: \"-130%\",\n        backgroundSize: \"cover\",\n        [theme.breakpoints.down(992)]: {\n          width: 190,\n          height: 190,\n          top: \"45%\",\n          left: \"-38%\",\n        },\n        [theme.breakpoints.down(568)]: {\n          display: \"none\",\n        },\n      },\n      \"&::after\": {\n        content: `\"\" !important`,\n        position: \"absolute\",\n        width: 250,\n        height: 250,\n        backgroundImage: `url(${user ? authBgFuzzy : clockBgFuzzy})`,\n        right: \"-85%\",\n        top: \"20%\",\n        backgroundSize: \"cover\",\n        [theme.breakpoints.down(992)]: {\n          width: 90,\n          height: 90,\n          right: \"-13%\",\n          bottom: -90,\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: 20,\n        },\n        [theme.breakpoints.down(568)]: {\n          display: \"none\",\n        },\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  return <div className={classes.authWrapper}>{children}</div>;\n};\n\nexport default AuthContainer;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport {\n  Button,\n  Container,\n  CircularProgress,\n  Snackbar,\n  Typography,\n  TextField,\n} from \"@mui/material\";\nimport AuthContainer from \"../../../containers/authContainer\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { Alert } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport cookie from \"cookie_js\";\nimport {\n  postActivationAccountData,\n  setAnswerActivationAccount,\n  resendActivationAccountCode,\n  setResendedCodeData,\n} from \"../../../redux/reducers/activation\";\nimport { istance } from \"../../../api\";\nimport { getProfileData } from \"../../../redux/reducers/myProfile\";\nconst Activation = ({ t }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { answerActivationAccountAlert, resended_code_data } = useSelector(\n    ({ ActivationAccountReducer }) => ActivationAccountReducer\n  );\n\n  const [reload, setReload] = useState(false);\n\n  const emailData = cookie.get(\"ActivationAccountEmail\");\n\n  const formik = useFormik({\n    initialValues: {\n      email: emailData,\n      code: \"\",\n    },\n    onSubmit: (values) => {\n      setReload(true);\n      dispatch(postActivationAccountData(values));\n    },\n  });\n\n  const firstUpdate = React.useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    if (answerActivationAccountAlert.severity === 200) {\n      setTimeout(() => {\n        cookie.set(\n          \"token_netex\",\n          answerActivationAccountAlert.message.token,\n          { path: \"/\" },\n          {\n            expires: new Date(\n              answerActivationAccountAlert.message.expires * 1000\n            ).toUTCString(),\n          }\n        );\n        istance.defaults.headers.Authorization = `Bearer ${answerActivationAccountAlert.message.token}`;\n        history.push(\"/dashboard/main\");\n        dispatch(getProfileData());\n      }, 700);\n    }\n    setReload(false);\n    // eslint-disable-next-line\n  }, [answerActivationAccountAlert.severity]);\n  const useStyles = makeStyles((theme) => ({\n    active: {\n      minHeight: \"100vh\",\n      background: \"#121212\",\n      [theme.breakpoints.down(992)]: {\n        minHeight: \"auto\",\n      },\n    },\n\n    formControl: {\n      \"& .MuiOutlinedInput-root\": {\n        background: \"transparent!important\",\n        color: \"#fff\",\n      },\n\n      \"& fieldset\": {\n        boxShadow: \"none!important\",\n      },\n\n      \"& .MuiOutlinedInput-input\": {\n        background: \"transparent\",\n        boxShadow: \"none!important\",\n        color: \"#fff\",\n      },\n      \"& .MuiInputLabel-formControl\": {\n        color: \"#B8C0CC !important\",\n        fontWeight: 300,\n        whiteSpace: \"nowrap\",\n        textOverflow: \"ellipsis\",\n        overflow: \"hidden\",\n        maxWidth: \"90%\",\n        fontSize: 16,\n      },\n\n      \"& .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#B8C0CC\",\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    document.title = t(\"ActivationAuthentication\");\n  }, []);\n\n  return (\n    <section className={classes.active}>\n      <Snackbar\n        open={answerActivationAccountAlert.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() =>\n          dispatch(\n            setAnswerActivationAccount({\n              ...alert,\n              open: false,\n              message: answerActivationAccountAlert.message,\n            })\n          )\n        }\n      >\n        <Alert\n          onClose={() =>\n            dispatch(setAnswerActivationAccount({ ...alert, open: false }))\n          }\n          severity={\n            answerActivationAccountAlert.severity === 200 ? \"success\" : \"error\"\n          }\n          variant=\"filled\"\n        >\n          {answerActivationAccountAlert.severity === 200\n            ? t(\"SuccessfulLogin\")\n            : answerActivationAccountAlert.message &&\n              answerActivationAccountAlert.message.messages}\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={resended_code_data.open}\n        autoHideDuration={2000}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        onClose={() =>\n          dispatch(\n            setResendedCodeData({\n              ...resended_code_data,\n              open: false,\n              severity: null,\n            })\n          )\n        }\n      >\n        <Alert\n          severity={resended_code_data.severity === 200 ? \"success\" : \"error\"}\n          variant=\"filled\"\n        >\n          {resended_code_data?.message?.messages}\n        </Alert>\n      </Snackbar>\n      <Container maxWidth=\"lg\">\n        <AuthContainer user>\n          <Typography variant=\"h3\" gutterBottom component=\"div\">\n            {t(\"ActivationAuthentication\")}\n          </Typography>\n          <Typography\n            style={{ maxWidth: 325, margin: \"0 auto\", lineHeight: \".9\" }}\n            variant=\"h5\"\n            gutterBottom\n            component=\"div\"\n          >\n            {t(\"activationDescr\")}\n          </Typography>\n\n          <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n            <span className=\"label\">{t(\"ActivationCode\")}</span>\n            <TextField\n              fullWidth\n              label={t(\"EnterActivationCode\")}\n              type=\"text\"\n              variant=\"outlined\"\n              name=\"code\"\n              value={formik.values.code}\n              className={classes.formControl}\n              onChange={formik.handleChange}\n              required\n            />\n            <Button\n              style={{ marginTop: 24, height: 56, width: \"100%\" }}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n              type=\"submit\"\n            >\n              {reload ? (\n                <CircularProgress color=\"secondary\" disableShrink />\n              ) : (\n                t(\"SignInTo\")\n              )}\n            </Button>\n            <Button\n              style={{ marginTop: 16, height: 56, width: \"100%\" }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={() =>\n                dispatch(resendActivationAccountCode({ email: emailData }))\n              }\n            >\n              Отправить еще раз\n            </Button>\n          </form>\n        </AuthContainer>\n      </Container>\n    </section>\n  );\n};\n\nexport default Activation;\n"],"sourceRoot":""}